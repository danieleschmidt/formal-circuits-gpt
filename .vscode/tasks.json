{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Install Dependencies",
            "type": "shell",
            "command": "pip",
            "args": ["install", "-e", ".[dev,test,docs]"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Run Tests",
            "type": "shell",
            "command": "python",
            "args": ["-m", "pytest", "tests/", "-v"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Run Unit Tests",
            "type": "shell",
            "command": "python",
            "args": ["-m", "pytest", "tests/", "-m", "not integration", "-v"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Run Integration Tests",
            "type": "shell",
            "command": "python",
            "args": ["-m", "pytest", "tests/", "-m", "integration", "-v"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Test with Coverage",
            "type": "shell",
            "command": "python",
            "args": ["-m", "pytest", "--cov=src", "--cov-report=html", "--cov-report=term", "tests/", "-v"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Lint Code",
            "type": "shell",
            "command": "python",
            "args": ["-m", "flake8", "src", "tests"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [
                {
                    "owner": "flake8",
                    "fileLocation": "absolute",
                    "pattern": {
                        "regexp": "^(.*):(\\d+):(\\d+):\\s+(\\w+)\\s+(.*)$",
                        "file": 1,
                        "line": 2,
                        "column": 3,
                        "severity": 4,
                        "message": 5
                    }
                }
            ]
        },
        {
            "label": "Type Check",
            "type": "shell",
            "command": "python",
            "args": ["-m", "mypy", "src"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [
                {
                    "owner": "mypy",
                    "fileLocation": "absolute",
                    "pattern": {
                        "regexp": "^(.*):(\\d+):(\\d+):\\s+(error|warning|note):\\s+(.*)$",
                        "file": 1,
                        "line": 2,
                        "column": 3,
                        "severity": 4,
                        "message": 5
                    }
                }
            ]
        },
        {
            "label": "Format Code",
            "type": "shell",
            "command": "python",
            "args": ["-m", "black", "src", "tests"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Sort Imports",
            "type": "shell",
            "command": "python",
            "args": ["-m", "isort", "src", "tests"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Format and Sort",
            "dependsOrder": "sequence",
            "dependsOn": ["Sort Imports", "Format Code"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Quality Check",
            "dependsOrder": "sequence",
            "dependsOn": ["Lint Code", "Type Check", "Format and Sort"],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Pre-commit Run All",
            "type": "shell",
            "command": "pre-commit",
            "args": ["run", "--all-files"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Build Package",
            "type": "shell",
            "command": "python",
            "args": ["-m", "build"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Build Docker Image",
            "type": "shell",
            "command": "docker",
            "args": ["build", "-t", "formal-circuits-gpt:latest", "."],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Run Docker Container",
            "type": "shell",
            "command": "docker",
            "args": ["run", "-it", "--rm", "formal-circuits-gpt:latest", "--help"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Generate Documentation",
            "type": "shell",
            "command": "python",
            "args": ["-m", "sphinx", "-b", "html", "docs/", "docs/_build/html"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Serve Documentation",
            "type": "shell",
            "command": "python",
            "args": ["-m", "http.server", "8000"],
            "options": {
                "cwd": "docs/_build/html"
            },
            "group": "build",
            "isBackground": true,
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Clean Cache",
            "type": "shell",
            "command": "find",
            "args": [".", "-type", "d", "-name", "__pycache__", "-exec", "rm", "-rf", "{}", "+"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Verify Sample Circuit",
            "type": "shell",
            "command": "python",
            "args": ["-m", "formal_circuits_gpt.cli", "verify", "examples/simple_adder.v", "--verbose"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Check Setup",
            "type": "shell",
            "command": "python",
            "args": ["-m", "formal_circuits_gpt.cli", "--check-setup"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        }
    ]
}